import React, { createContext, useContext, useState, ReactNode } from 'react';

interface ImagesContextType {
  images: any[];
  query: string;
  setQuery: (query: string) => void;
  setImages: (images: any[]) => void;
  language: string;
  setLanguage: (language: string) => void;
}

export const ImagesContext = createContext<ImagesContextType | undefined>(undefined);

interface ImagesContextProviderProps {
  children: ReactNode;
}

export default function ImagesContextProvider({ children }: ImagesContextProviderProps) {
  const [images, setImages] = useState<any[]>([]);
  const [query, setQuery] = useState<string>('');
  const [language, setLanguage] = useState<string>('en');

  return (
    <ImagesContext.Provider value={{ images, query, setQuery, setImages, language, setLanguage }}>
      {children}
    </ImagesContext.Provider>
  );
}

export const useGlobalContext = (): ImagesContextType => {
  const context = useContext(ImagesContext);
  if (!context) {
    throw new Error("useGlobalContext must be used within an ImagesContextProvider");
  }
  return context;
};
